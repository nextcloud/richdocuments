# SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors
# SPDX-License-Identifier: MIT
name: WOPI Integration tests

on:
  pull_request:
  push:
    branches:
      - main
      - stable*

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  APP_NAME: richdocuments

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      src: ${{ steps.changes.outputs.src}}

    steps:
      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        continue-on-error: true
        with:
          filters: |
            src:
              - '.github/workflows/**'
              - 'appinfo/**'
              - 'lib/**'
              - 'templates/**'
              - 'tests/**'
              - 'vendor/**'
              - 'vendor-bin/**'
              - '.php-cs-fixer.dist.php'
              - 'composer.json'
              - 'composer.lock'

  sqlite:
    runs-on: ubuntu-latest

    needs: changes
    if: needs.changes.outputs.src != 'false'

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        code-image: [ 'release', 'nightly' ]
        php-versions: ['8.1']
        databases: ['sqlite']
        server-versions: ['stable30']
        scenarios: ['wopi', 'direct', 'federation', 'api']

    name: integration-${{ matrix.code-image }}-${{ matrix.scenarios }}-${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}

    services:
      collabora:
        image: ${{ matrix.code-image == 'release' && 'collabora/code:latest' || 'ghcr.io/juliusknorr/code-nightly:latest' }}
        env:
          extra_params: '--o:ssl.enable=false'
          aliasgroup1: 'http://nextcloud'
        ports:
          - "9980:9980"

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit:8.5.14
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_sqlite, gd, zip, apcu
          ini-values:
            apc.enable_cli=on
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          echo '<?php $CONFIG=["memcache.local"=>"\OC\Memcache\APCu","hashing_default_password"=>true];' > config/config.php
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable --force ${{ env.APP_NAME }}

      - name: Run ${{ matrix.scenarios }} integration tests
        working-directory: apps/${{ env.APP_NAME }}
        run: cd tests && bash run-integration.sh features/${{ matrix.scenarios }}.feature

  mysql:
    runs-on: ubuntu-latest

    needs: changes
    if: needs.changes.outputs.src != 'false'

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.1']
        databases: ['mysql']
        server-versions: ['stable30']
        scenarios: ['wopi', 'direct', 'federation', 'api']

    name: integration-${{ matrix.scenarios }}-${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}

    services:
      mysql:
        image: ghcr.io/nextcloud/continuous-integration-mariadb-10.6:latest
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
      collabora:
        image: ghcr.io/juliusknorr/nextcloud-dev-code:latest
        env:
          extra_params: '--o:ssl.enable=false'
          aliasgroup1: 'http://nextcloud'
        ports:
          - "9980:9980"

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit:8.5.14
          extensions: mbstring, iconv, fileinfo, intl, mysql, pdo_mysql, gd, zip, apcu
          ini-values:
            apc.enable_cli=on
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          echo '<?php $CONFIG=["memcache.local"=>"\OC\Memcache\APCu","hashing_default_password"=>true];' > config/config.php
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable --force ${{ env.APP_NAME }}

      - name: Run ${{ matrix.scenarios }} integration tests
        working-directory: apps/${{ env.APP_NAME }}
        run: cd tests && bash run-integration.sh features/${{ matrix.scenarios }}.feature

  pgsql:
    runs-on: ubuntu-latest

    needs: changes
    if: needs.changes.outputs.src != 'false'

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.1']
        databases: ['pgsql']
        server-versions: ['stable30']
        scenarios: ['wopi', 'direct', 'federation', 'api']

    name: integration-${{ matrix.scenarios }}-${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}

    services:
      postgres:
        image: ghcr.io/nextcloud/continuous-integration-postgres-14:latest
        ports:
          - 4444:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5
      collabora:
        image: ghcr.io/juliusknorr/nextcloud-dev-code:latest
        env:
          extra_params: '--o:ssl.enable=false'
          aliasgroup1: 'http://nextcloud'
        ports:
          - "9980:9980"

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit:8.5.14
          extensions: mbstring, iconv, fileinfo, intl, pgsql, pdo_pgsql, gd, zip, apcu
          ini-values:
            apc.enable_cli=on
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          echo '<?php $CONFIG=["memcache.local"=>"\OC\Memcache\APCu","hashing_default_password"=>true];' > config/config.php
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable --force ${{ env.APP_NAME }}

      - name: Run ${{ matrix.scenarios }} integration tests
        working-directory: apps/${{ env.APP_NAME }}
        run: cd tests && bash run-integration.sh features/${{ matrix.scenarios }}.feature

  oci:
    runs-on: ubuntu-22.04

    needs: changes
    if: needs.changes.outputs.src != 'false'

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.1']
        databases: ['oci']
        server-versions: ['stable30']
        scenarios: ['wopi', 'direct', 'federation', 'api']

    name: integration-${{ matrix.scenarios }}-${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}

    services:
      oracle:
        image: ghcr.io/gvenzl/oracle-xe:11

        # Provide passwords and other environment variables to container
        env:
          ORACLE_RANDOM_PASSWORD: true
          APP_USER: autotest
          APP_USER_PASSWORD: owncloud

        # Forward Oracle port
        ports:
          - 1521:1521/tcp

        # Provide healthcheck script options for startup
        options: >-
          --health-cmd healthcheck.sh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
      collabora:
        image: ghcr.io/juliusknorr/nextcloud-dev-code:latest
        env:
          extra_params: '--o:ssl.enable=false'
          aliasgroup1: 'http://nextcloud'
        ports:
          - "9980:9980"

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: mbstring, iconv, fileinfo, intl, oci8, gd, zip, apcu
          ini-values:
            apc.enable_cli=on
          tools: phpunit:8.5.15
          coverage: none

      - name: Set up PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i

      - name: Set up Nextcloud
        run: |
          mkdir data
          echo '<?php $CONFIG=["memcache.local"=>"\OC\Memcache\APCu","hashing_default_password"=>true];' > config/config.php
          ./occ maintenance:install --verbose --database=oci --database-name=XE --database-host=127.0.0.1 --database-port=1521 --database-user=autotest --database-pass=owncloud --admin-user admin --admin-pass password
          php -f index.php
          ./occ app:enable --force ${{ env.APP_NAME }}

      - name: Run ${{ matrix.scenarios }} integration tests
        working-directory: apps/${{ env.APP_NAME }}
        run: cd tests && bash run-integration.sh features/${{ matrix.scenarios }}.feature

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [changes, sqlite, mysql, pgsql, oci]

    if: always()

    name: phpunit-oci-summary

    steps:
      - name: Summary status
        run: if ${{ needs.changes.outputs.src != 'false' && ( needs.sqlite.result != 'success' || needs.mysql.result != 'success' || needs.pgsql.result != 'success' || needs.oci.result != 'success') }}; then exit 1; fi
